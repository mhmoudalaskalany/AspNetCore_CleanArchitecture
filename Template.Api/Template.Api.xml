<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Template.Api</name>
    </assembly>
    <members>
        <member name="T:Template.Api.Controllers.V1.Base.BaseController">
            <inheritdoc />
        </member>
        <member name="F:Template.Api.Controllers.V1.Base.BaseController.TokenService">
            <summary>
            Token Business Property
            </summary>
        </member>
        <member name="M:Template.Api.Controllers.V1.Base.BaseController.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Template.Api.Controllers.V1.Base.BaseController.#ctor(Template.Application.Services.Base.ITokenService)">
            <inheritdoc />
        </member>
        <member name="T:Template.Api.Controllers.V1.Business.FilesController">
            <summary>
            Files Controller
            </summary>
        </member>
        <member name="M:Template.Api.Controllers.V1.Business.FilesController.#ctor(Template.Application.Services.File.IFileService,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Template.Api.Controllers.V1.Business.FilesController.DownloadWithAppCodeAsync(System.Guid,System.String)">
            <summary>
            Download File With App Code From  Token 
            </summary>
            <param name="id"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V1.Business.FilesController.GenerateTokenWithClaimsAsync(System.Collections.Generic.List{System.Guid},System.String)">
            <summary>
            Generate Token With App Code
            </summary>
            <param name="ids"></param>
            <param name="appCode"></param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V1.Business.FilesController.UploadToSanStorageAsync(Microsoft.AspNetCore.Http.IFormFileCollection,Template.Domain.Enum.StorageType,System.Boolean,System.String)">
            <summary>
            Upload To San Storage
            </summary>
            <param name="files"></param>
            <param name="storageType"></param>
            <param name="isPublic"></param>
            <param name="appCode"></param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V1.Business.FilesController.UploadBytesAsync(Template.Common.DTO.Common.File.UploadRequestDto)">
            <summary>
            Upload To Bytes
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V1.Business.FilesController.GetDirectories(Template.Domain.Enum.StorageType)">
            <summary>
            List Current Path Directories
            </summary>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V1.Business.FilesController.DeleteAsync(System.Guid)">
            <summary>
            Remove  by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="T:Template.Api.Controllers.V1.Identity.AccountsController">
            <summary>
            Accounts Controller
            </summary>
        </member>
        <member name="M:Template.Api.Controllers.V1.Identity.AccountsController.#ctor(Template.Application.Services.Identity.Account.IAccountService,Template.Application.Services.Base.ITokenService)">
            <inheritdoc />
        </member>
        <member name="M:Template.Api.Controllers.V1.Identity.AccountsController.Login(Template.Common.DTO.Identity.Account.LoginParameters)">
            <summary>
            Login 
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="T:Template.Api.Controllers.V1.Identity.PermissionsController">
            <summary>
            Permissions Controller
            </summary>
        </member>
        <member name="M:Template.Api.Controllers.V1.Identity.PermissionsController.#ctor(Template.Application.Services.Identity.Permission.IPermissionService)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Template.Api.Controllers.V1.Identity.PermissionsController.GetAsync(System.Int64)">
            <summary>
            Get By Id 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V1.Identity.PermissionsController.GetEditAsync(System.Int64)">
            <summary>
            Get By Id For Edit 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V1.Identity.PermissionsController.GetAllAsync">
            <summary>
            Get All 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V1.Identity.PermissionsController.GetPagedAsync(Template.Common.DTO.Base.BaseParam{Template.Common.DTO.Identity.Permission.Parameters.PermissionFilter})">
            <summary>
            Get Paged
            </summary>
            <param name="filter">Filter responsible for search and sort</param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V1.Identity.PermissionsController.AddAsync(Template.Common.DTO.Identity.Permission.AddPermissionDto)">
            <summary>
            Add 
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V1.Identity.PermissionsController.UpdateAsync(Template.Common.DTO.Identity.Permission.AddPermissionDto)">
            <summary>
            Update  
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V1.Identity.PermissionsController.DeleteAsync(System.Int64)">
            <summary>
            Remove  by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V1.Identity.PermissionsController.DeleteSoftAsync(System.Int64)">
            <summary>
            Soft Remove  by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="T:Template.Api.Controllers.V1.Identity.UsersController">
            <summary>
            Users Controller
            </summary>
        </member>
        <member name="M:Template.Api.Controllers.V1.Identity.UsersController.#ctor(Template.Application.Services.Identity.User.IUserService)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Template.Api.Controllers.V1.Identity.UsersController.GetAsync(System.Guid)">
            <summary>
            Get By Id 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V1.Identity.UsersController.GetEditAsync(System.Guid)">
            <summary>
            Get By Id For Edit 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V1.Identity.UsersController.GetAllAsync">
            <summary>
            Get All 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V1.Identity.UsersController.GetPagedAsync(Template.Common.DTO.Base.BaseParam{Template.Common.DTO.Identity.User.Parameters.UserFilter})">
            <summary>
            Get Paged
            </summary>
            <param name="filter">Filter responsible for search and sort</param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V1.Identity.UsersController.AddAsync(Template.Common.DTO.Identity.User.AddUserDto)">
            <summary>
            Add 
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V1.Identity.UsersController.UpdateAsync(Template.Common.DTO.Identity.User.AddUserDto)">
            <summary>
            Update  
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V1.Identity.UsersController.DeleteAsync(System.Guid)">
            <summary>
            Remove  by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V1.Identity.UsersController.DeleteSoftAsync(System.Guid)">
            <summary>
            Soft Remove by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="T:Template.Api.Controllers.V1.Lookup.ActionsController">
            <summary>
            Actions Controller
            </summary>
        </member>
        <member name="M:Template.Api.Controllers.V1.Lookup.ActionsController.#ctor(Template.Application.Services.Lookups.Action.IActionService)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Template.Api.Controllers.V1.Lookup.ActionsController.GetActionsAsync">
            <summary>
            Get All Actions
            </summary>
            <returns></returns>
        </member>
        <member name="T:Template.Api.Controllers.V1.Lookup.CategoriesController">
            <summary>
            Categories Controller
            </summary>
        </member>
        <member name="M:Template.Api.Controllers.V1.Lookup.CategoriesController.#ctor(Template.Application.Services.Lookups.Category.ICategoryService)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Template.Api.Controllers.V1.Lookup.CategoriesController.GetAsync(System.Int32)">
            <summary>
            Get By Id 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V1.Lookup.CategoriesController.GetEditAsync(System.Int32)">
            <summary>
            Get By Id For Edit 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V1.Lookup.CategoriesController.GetAllAsync">
            <summary>
            Get All Categories
            </summary>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V1.Lookup.CategoriesController.GetPagedAsync(Template.Common.DTO.Base.BaseParam{Template.Common.DTO.Lookup.Category.Parameters.CategoryFilter})">
            <summary>
            Get Paged
            </summary>
            <param name="filter">Filter responsible for search and sort</param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V1.Lookup.CategoriesController.AddAsync(Template.Common.DTO.Lookup.Category.AddCategoryDto)">
            <summary>
            Add 
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V1.Lookup.CategoriesController.UpdateAsync(Template.Common.DTO.Lookup.Category.AddCategoryDto)">
            <summary>
            Update  
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V1.Lookup.CategoriesController.DeleteAsync(System.Int32)">
            <summary>
            Remove  by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V1.Lookup.CategoriesController.DeleteSoftAsync(System.Int32)">
            <summary>
            Soft Remove  by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="T:Template.Api.Controllers.V1.Lookup.StatusesController">
            <summary>
            Statuses Controller
            </summary>
        </member>
        <member name="M:Template.Api.Controllers.V1.Lookup.StatusesController.#ctor(Template.Application.Services.Lookups.Status.IStatusService)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Template.Api.Controllers.V1.Lookup.StatusesController.GetStatusesAsync">
            <summary>
            Get All Statuses
            </summary>
            <returns></returns>
        </member>
        <member name="T:Template.Api.Controllers.V2.Base.BaseController">
            <inheritdoc />
        </member>
        <member name="F:Template.Api.Controllers.V2.Base.BaseController.TokenService">
            <summary>
            Token Business Property
            </summary>
        </member>
        <member name="M:Template.Api.Controllers.V2.Base.BaseController.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Template.Api.Controllers.V2.Base.BaseController.#ctor(Template.Application.Services.Base.ITokenService)">
            <inheritdoc />
        </member>
        <member name="T:Template.Api.Controllers.V2.Business.FilesController">
            <summary>
            Files Controller
            </summary>
        </member>
        <member name="M:Template.Api.Controllers.V2.Business.FilesController.#ctor(Template.Application.Services.File.IFileService,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Template.Api.Controllers.V2.Business.FilesController.DownloadWithAppCodeAsync(System.Guid,System.String)">
            <summary>
            Download File With App Code From  Token 
            </summary>
            <param name="id"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V2.Business.FilesController.GenerateTokenWithClaimsAsync(System.Collections.Generic.List{System.Guid},System.String)">
            <summary>
            Generate Token With App Code
            </summary>
            <param name="ids"></param>
            <param name="appCode"></param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V2.Business.FilesController.UploadToSanStorageAsync(Microsoft.AspNetCore.Http.IFormFileCollection,Template.Domain.Enum.StorageType,System.Boolean,System.String)">
            <summary>
            Upload To San Storage
            </summary>
            <param name="files"></param>
            <param name="storageType"></param>
            <param name="isPublic"></param>
            <param name="appCode"></param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V2.Business.FilesController.UploadBytesAsync(Template.Common.DTO.Common.File.UploadRequestDto)">
            <summary>
            Upload To Bytes
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V2.Business.FilesController.GetDirectories(Template.Domain.Enum.StorageType)">
            <summary>
            List Current Path Directories
            </summary>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V2.Business.FilesController.DeleteAsync(System.Guid)">
            <summary>
            Remove  by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="T:Template.Api.Controllers.V2.Identity.AccountsController">
            <summary>
            Accounts Controller
            </summary>
        </member>
        <member name="M:Template.Api.Controllers.V2.Identity.AccountsController.#ctor(Template.Application.Services.Identity.Account.IAccountService,Template.Application.Services.Base.ITokenService)">
            <inheritdoc />
        </member>
        <member name="M:Template.Api.Controllers.V2.Identity.AccountsController.Login(Template.Common.DTO.Identity.Account.LoginParameters)">
            <summary>
            Login 
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="T:Template.Api.Controllers.V2.Identity.PermissionsController">
            <summary>
            Permissions Controller
            </summary>
        </member>
        <member name="M:Template.Api.Controllers.V2.Identity.PermissionsController.#ctor(Template.Application.Services.Identity.Permission.IPermissionService)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Template.Api.Controllers.V2.Identity.PermissionsController.GetAsync(System.Int64)">
            <summary>
            Get By Id 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V2.Identity.PermissionsController.GetEditAsync(System.Int64)">
            <summary>
            Get By Id For Edit 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V2.Identity.PermissionsController.GetAllAsync">
            <summary>
            Get All 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V2.Identity.PermissionsController.GetPagedAsync(Template.Common.DTO.Base.BaseParam{Template.Common.DTO.Identity.Permission.Parameters.PermissionFilter})">
            <summary>
            Get Paged
            </summary>
            <param name="filter">Filter responsible for search and sort</param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V2.Identity.PermissionsController.AddAsync(Template.Common.DTO.Identity.Permission.AddPermissionDto)">
            <summary>
            Add 
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V2.Identity.PermissionsController.UpdateAsync(Template.Common.DTO.Identity.Permission.AddPermissionDto)">
            <summary>
            Update  
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V2.Identity.PermissionsController.DeleteAsync(System.Int64)">
            <summary>
            Remove  by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V2.Identity.PermissionsController.DeleteSoftAsync(System.Int64)">
            <summary>
            Soft Remove  by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="T:Template.Api.Controllers.V2.Identity.UsersController">
            <summary>
            Users Controller
            </summary>
        </member>
        <member name="M:Template.Api.Controllers.V2.Identity.UsersController.#ctor(Template.Application.Services.Identity.User.IUserService)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Template.Api.Controllers.V2.Identity.UsersController.GetAsync(System.Guid)">
            <summary>
            Get By Id 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V2.Identity.UsersController.GetEditAsync(System.Guid)">
            <summary>
            Get By Id For Edit 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V2.Identity.UsersController.GetAllAsync">
            <summary>
            Get All 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V2.Identity.UsersController.GetPagedAsync(Template.Common.DTO.Base.BaseParam{Template.Common.DTO.Identity.User.Parameters.UserFilter})">
            <summary>
            Get Paged
            </summary>
            <param name="filter">Filter responsible for search and sort</param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V2.Identity.UsersController.AddAsync(Template.Common.DTO.Identity.User.AddUserDto)">
            <summary>
            Add 
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V2.Identity.UsersController.UpdateAsync(Template.Common.DTO.Identity.User.AddUserDto)">
            <summary>
            Update  
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V2.Identity.UsersController.DeleteAsync(System.Guid)">
            <summary>
            Remove  by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V2.Identity.UsersController.DeleteSoftAsync(System.Guid)">
            <summary>
            Soft Remove by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="T:Template.Api.Controllers.V2.Lookup.ActionsController">
            <summary>
            Actions Controller
            </summary>
        </member>
        <member name="M:Template.Api.Controllers.V2.Lookup.ActionsController.#ctor(Template.Application.Services.Lookups.Action.IActionService)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Template.Api.Controllers.V2.Lookup.ActionsController.GetActionsAsync">
            <summary>
            Get All Actions
            </summary>
            <returns></returns>
        </member>
        <member name="T:Template.Api.Controllers.V2.Lookup.CategoriesController">
            <summary>
            Categories Controller
            </summary>
        </member>
        <member name="M:Template.Api.Controllers.V2.Lookup.CategoriesController.#ctor(Template.Application.Services.Lookups.Category.ICategoryService)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Template.Api.Controllers.V2.Lookup.CategoriesController.GetAsync(System.Int32)">
            <summary>
            Get By Id 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V2.Lookup.CategoriesController.GetEditAsync(System.Int32)">
            <summary>
            Get By Id For Edit 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V2.Lookup.CategoriesController.GetAllAsync">
            <summary>
            Get All Categories
            </summary>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V2.Lookup.CategoriesController.GetPagedAsync(Template.Common.DTO.Base.BaseParam{Template.Common.DTO.Lookup.Category.Parameters.CategoryFilter})">
            <summary>
            Get Paged
            </summary>
            <param name="filter">Filter responsible for search and sort</param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V2.Lookup.CategoriesController.AddAsync(Template.Common.DTO.Lookup.Category.AddCategoryDto)">
            <summary>
            Add 
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V2.Lookup.CategoriesController.UpdateAsync(Template.Common.DTO.Lookup.Category.AddCategoryDto)">
            <summary>
            Update  
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V2.Lookup.CategoriesController.DeleteAsync(System.Int32)">
            <summary>
            Remove  by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.V2.Lookup.CategoriesController.DeleteSoftAsync(System.Int32)">
            <summary>
            Soft Remove  by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="T:Template.Api.Controllers.V2.Lookup.StatusesController">
            <summary>
            Statuses Controller
            </summary>
        </member>
        <member name="M:Template.Api.Controllers.V2.Lookup.StatusesController.#ctor(Template.Application.Services.Lookups.Status.IStatusService)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Template.Api.Controllers.V2.Lookup.StatusesController.GetStatusesAsync">
            <summary>
            Get All Statuses
            </summary>
            <returns></returns>
        </member>
        <member name="T:Template.Api.Extensions.ConfigureDependencyExtension">
            <summary>
            Dependency Extensions
            </summary>
        </member>
        <member name="M:Template.Api.Extensions.ConfigureDependencyExtension.RegisterServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Register Extensions
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Extensions.ConfigureDependencyExtension.RegisterDbContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add DbContext
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:Template.Api.Extensions.ConfigureDependencyExtension.RegisterApiMonitoring(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add Health Checks
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Template.Api.Extensions.ConfigureDependencyExtension.RegisterAutoMapper(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            register auto-mapper
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Template.Api.Extensions.ConfigureDependencyExtension.AddLocalizationServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Register localization
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Template.Api.Extensions.ConfigureDependencyExtension.RegisterRepository(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Register Custom Repositories
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Template.Api.Extensions.ConfigureDependencyExtension.RegisterIntegrationRepositories(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            register Integration Repositories
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Template.Api.Extensions.ConfigureDependencyExtension.RegisterApiVersioning(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Register Api Versioning
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Template.Api.Extensions.ConfigureDependencyExtension.RegisterLowerCaseUrls(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Lower Case Urls
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Template.Api.Extensions.ConfigureDependencyExtension.RegisterSwaggerConfig(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Swagger Config
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Template.Api.Extensions.ConfigureDependencyExtension.RegisterCores(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Register Main Core
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:Template.Api.Extensions.ConfigureMiddlewareExtension">
            <summary>
            Pipeline Extensions
            </summary>
        </member>
        <member name="M:Template.Api.Extensions.ConfigureMiddlewareExtension.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Configuration.IConfiguration,Asp.Versioning.ApiExplorer.IApiVersionDescriptionProvider)">
            <summary>
            General Configuration Method
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="configuration"></param>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Extensions.ConfigureMiddlewareExtension.ConfigureCors(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Configure Cors
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:Template.Api.Extensions.ConfigureMiddlewareExtension.CreateDatabase(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Create Database From Migration
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:Template.Api.Extensions.ConfigureMiddlewareExtension.AddLocalization(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Add Localization
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:Template.Api.Extensions.ConfigureMiddlewareExtension.SwaggerConfig(Microsoft.AspNetCore.Builder.IApplicationBuilder,Asp.Versioning.ApiExplorer.IApiVersionDescriptionProvider)">
            <summary>
            User Swagger
            </summary>
            <param name="app"></param>
            <param name="provider"></param>
        </member>
        <member name="M:Template.Api.Extensions.ConfigureMiddlewareExtension.UseFluentScheduler(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            User Fluent Scheduler
            </summary>
            <param name="app"></param>
            <param name="configuration"></param>
        </member>
        <member name="T:Template.Api.Extensions.Swagger.Headers.LanguageHeader">
            <summary>
            Language Header
            </summary>
        </member>
        <member name="M:Template.Api.Extensions.Swagger.Headers.LanguageHeader.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            Apply
            </summary>
            <param name="operation"></param>
            <param name="context"></param>
        </member>
        <member name="T:Template.Api.Extensions.Swagger.Options.SwaggerConfigureOptions">
            <summary>
              Configures the Swagger generation options.
            </summary>
            <remarks>
              This allows API versioning to define a Swagger document per API version after the <see
              cref="T:Asp.Versioning.ApiExplorer.IApiVersionDescriptionProvider"/> service has been resolved from the service container.
            </remarks>
        </member>
        <member name="M:Template.Api.Extensions.Swagger.Options.SwaggerConfigureOptions.#ctor(Asp.Versioning.ApiExplorer.IApiVersionDescriptionProvider)">
            <summary>
              Initializes a new instance of the <see cref="T:Template.Api.Extensions.Swagger.Options.SwaggerConfigureOptions"/> class.
            </summary>
            <param name="provider">
              The <see cref="T:Asp.Versioning.ApiExplorer.IApiVersionDescriptionProvider">provider</see> used to generate Swagger documents.
            </param>
        </member>
        <member name="M:Template.Api.Extensions.Swagger.Options.SwaggerConfigureOptions.Configure(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)">
            <inheritdoc/>
        </member>
        <member name="T:Template.Api.MiddleWares.ExceptionMiddleware">
            <summary>
            Exception Middleware
            </summary>
        </member>
        <member name="M:Template.Api.MiddleWares.ExceptionMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Template.Api.MiddleWares.ExceptionMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Invoke
            </summary>
        </member>
        <member name="M:Template.Api.MiddleWares.ExceptionMiddleware.HandleExceptionAsync(Microsoft.AspNetCore.Http.HttpContext,System.Exception)">
            <summary>
            Handle
            </summary>
        </member>
        <member name="T:Template.Api.MiddleWares.LanguageMiddleware">
            <summary>
            Language Middleware
            </summary>
        </member>
        <member name="M:Template.Api.MiddleWares.LanguageMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            Language Middleware Constructor
            </summary>
        </member>
        <member name="M:Template.Api.MiddleWares.LanguageMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Invoke
            </summary>
        </member>
        <member name="T:Template.Api.MiddleWares.MiddlewareExtensions">
            <summary>
            Middleware  Pipeline Registration
            </summary>
        </member>
        <member name="M:Template.Api.MiddleWares.MiddlewareExtensions.ConfigureCustomMiddleware(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Configure Method
            </summary>
            <param name="app"></param>
        </member>
        <member name="T:Template.Api.MiddleWares.Swagger.SwaggerBasicAuthMiddleware">
            <summary>
            Swagger Middleware
            </summary>
        </member>
        <member name="M:Template.Api.MiddleWares.Swagger.SwaggerBasicAuthMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Template.Api.MiddleWares.Swagger.SwaggerBasicAuthMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Invoke
            </summary>
            <returns></returns>
        </member>
        <member name="M:Template.Api.MiddleWares.Swagger.SwaggerBasicAuthMiddleware.IsAuthorized(System.String,System.String)">
             <summary>
            
             </summary>
             <param name="username"></param>
             <param name="password"></param>
             <returns></returns>
        </member>
        <member name="M:Template.Api.MiddleWares.Swagger.SwaggerBasicAuthMiddleware.IsLocalRequest(Microsoft.AspNetCore.Http.HttpContext)">
             <summary>
            
             </summary>
             <param name="context"></param>
             <returns></returns>
        </member>
        <member name="T:Template.Api.Program">
            <summary>
            Start Point
            </summary>
        </member>
        <member name="P:Template.Api.Program.Configuration">
            <summary>
            Configuration Properties
            </summary>
        </member>
        <member name="M:Template.Api.Program.Main(System.String[])">
            <summary>
            Kick Off
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Template.Api.Program.CreateHostBuilder(System.String[])">
            <summary>
            Web Host Builder
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Template.Api.Startup">
            <summary>
            Start Up Class
            </summary>
        </member>
        <member name="M:Template.Api.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:Template.Api.Startup.Configuration">
            <summary>
            Public Configuration Property
            </summary>
        </member>
        <member name="M:Template.Api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configure Dependencies
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Template.Api.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Asp.Versioning.ApiExplorer.IApiVersionDescriptionProvider)">
            <summary>
            Configure Pipeline
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="provider"></param>
        </member>
    </members>
</doc>
